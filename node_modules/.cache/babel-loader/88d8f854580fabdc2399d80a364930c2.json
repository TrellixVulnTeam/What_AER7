{"ast":null,"code":"import _slicedToArray from\"C:/Users/priya/Desktop/fukran/quora-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Avatar}from'@material-ui/core';import React,{useState}from'react';import'../css/QuoraBox.css';import{useSelector}from'react-redux';import{selectUser}from'../features/userSlice';import ImageOutlinedIcon from'@material-ui/icons/ImageOutlined';import PublicOutlinedIcon from'@material-ui/icons/PublicOutlined';import KeyboardArrowDownIcon from'@material-ui/icons/KeyboardArrowDown';import SendIcon from'@material-ui/icons/Send';import Modal from'react-modal';import{ExpandMore,Link}from'@material-ui/icons/';import firebase from'firebase';import PeopleAltOutlinedIcon from'@material-ui/icons/PeopleAltOutlined';import{Input}from'@material-ui/core';import db,{auth}from\"../firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function QuoraBox(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openModal=_useState2[0],setOpenModal=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),inputUrl=_useState6[0],setInputUrl=_useState6[1];var handleQuestion=function handleQuestion(e){e.preventDefault();setOpenModal(false);db.collection('questions').add({question:input,imageUrl:inputUrl,timestamp:firebase.firestore.FieldValue.serverTimestamp(),user:user});setInput(\"\");setInputUrl(\"\");};var user=useSelector(selectUser);return/*#__PURE__*/_jsxs(\"div\",{className:\"quoraBox\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"quoraBox_info\",children:[/*#__PURE__*/_jsx(Avatar,{src:user.photo}),/*#__PURE__*/_jsx(\"h5\",{onClick:function onClick(){return setOpenModal(true);},children:\"What is your Question or Link?\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quoraBox_quora\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"quoraBox_icon\",children:[/*#__PURE__*/_jsx(ImageOutlinedIcon,{}),/*#__PURE__*/_jsx(\"h5\",{children:\"Add image\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quoraBox_icon\",children:[/*#__PURE__*/_jsx(PublicOutlinedIcon,{}),/*#__PURE__*/_jsx(\"h5\",{children:\"Public\"}),/*#__PURE__*/_jsx(KeyboardArrowDownIcon,{})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quoraBox_button\",onClick:function onClick(){return setOpenModal(true);},children:[/*#__PURE__*/_jsx(SendIcon,{}),/*#__PURE__*/_jsx(\"h5\",{children:\"Post\"})]})]}),/*#__PURE__*/_jsxs(Modal,{isOpen:openModal,onRequestClose:function onRequestClose(){return setOpenModal(false);},shouldCloseOnOverlayClick:false,style:{overlay:{width:700,height:600,backgroundColor:\"rgba(0,0,0,0.8)\",zIndex:\"1000\",top:\"50%\",left:\"50%\",marginTop:\"-300px\",marginLeft:\"-350px\"}},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal__title\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Add Question\"}),/*#__PURE__*/_jsx(\"h5\",{children:\"Share Link\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal__info\",children:[/*#__PURE__*/_jsx(Avatar,{className:\"avatar\",src:user.photo}),/*#__PURE__*/_jsxs(\"p\",{children:[user.disPlayName?user.disPlayName:user.email,\" asked\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal__scope\",children:[/*#__PURE__*/_jsx(PeopleAltOutlinedIcon,{}),/*#__PURE__*/_jsx(\"p\",{children:\"Public\"}),/*#__PURE__*/_jsx(ExpandMore,{})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal__Field\",children:[/*#__PURE__*/_jsx(Input,{required:true,value:input,onChange:function onChange(e){return setInput(e.target.value);},type:\"text\",placeholder:\"Start your question with 'What', 'How', 'Why', etc. \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal__fieldLink\",children:[/*#__PURE__*/_jsx(Link,{}),/*#__PURE__*/_jsx(\"input\",{value:inputUrl,onChange:function onChange(e){return setInputUrl(e.target.value);},type:\"text\",placeholder:\"Optional: inclue a link that gives context\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal__buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"cancle\",onClick:function onClick(){return setOpenModal(false);},children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"sumbit\",onClick:handleQuestion,className:\"add\",children:\"Add Question\"})]})]})]});}export default QuoraBox;","map":{"version":3,"sources":["C:/Users/priya/Desktop/fukran/quora-clone/src/component/QuoraBox.js"],"names":["Avatar","React","useState","useSelector","selectUser","ImageOutlinedIcon","PublicOutlinedIcon","KeyboardArrowDownIcon","SendIcon","Modal","ExpandMore","Link","firebase","PeopleAltOutlinedIcon","Input","db","auth","QuoraBox","openModal","setOpenModal","input","setInput","inputUrl","setInputUrl","handleQuestion","e","preventDefault","collection","add","question","imageUrl","timestamp","firestore","FieldValue","serverTimestamp","user","photo","overlay","width","height","backgroundColor","zIndex","top","left","marginTop","marginLeft","disPlayName","email","target","value"],"mappings":"gKAAA,OAASA,MAAT,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,qBAAP,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAAQC,UAAR,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,kCAA9B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,mCAA/B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,sCAAlC,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,UAAT,CAAqBC,IAArB,KAAiC,qBAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,sCAAlC,CACA,OAASC,KAAT,KAAsB,mBAAtB,CAEA,MAAOC,CAAAA,EAAP,EAAaC,IAAb,KAAyB,aAAzB,C,wFAGA,QAASC,CAAAA,QAAT,EAAoB,CAChB,cAAkCf,QAAQ,CAAC,KAAD,CAA1C,wCAAOgB,SAAP,eAAkBC,YAAlB,eACA,eAA0BjB,QAAQ,CAAC,EAAD,CAAlC,yCAAOkB,KAAP,eAAcC,QAAd,eACA,eAA+BnB,QAAQ,CAAC,EAAD,CAAvC,yCAAMoB,QAAN,eAAgBC,WAAhB,eAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GAEAP,YAAY,CAAC,KAAD,CAAZ,CAEAJ,EAAE,CAACY,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+B,CAC3BC,QAAQ,CAAET,KADiB,CAE3BU,QAAQ,CAAER,QAFiB,CAG3BS,SAAS,CAAEnB,QAAQ,CAACoB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EAHgB,CAI3BC,IAAI,CAAEA,IAJqB,CAA/B,EAOAd,QAAQ,CAAC,EAAD,CAAR,CACAE,WAAW,CAAC,EAAD,CAAX,CACH,CAdD,CAgBA,GAAMY,CAAAA,IAAI,CAAEhC,WAAW,CAACC,UAAD,CAAvB,CACA,mBACI,aAAK,SAAS,CAAC,UAAf,wBACI,aAAK,SAAS,CAAC,eAAf,wBACI,KAAC,MAAD,EACA,GAAG,CAAE+B,IAAI,CAACC,KADV,EADJ,cAII,WAAI,OAAO,CAAE,yBAAMjB,CAAAA,YAAY,CAAC,IAAD,CAAlB,EAAb,4CAJJ,GADJ,cAOI,aAAK,SAAS,CAAC,gBAAf,wBACI,aAAK,SAAS,CAAC,eAAf,wBACI,KAAC,iBAAD,IADJ,cAEI,iCAFJ,GADJ,cAKI,aAAK,SAAS,CAAC,eAAf,wBACI,KAAC,kBAAD,IADJ,cAEI,8BAFJ,cAGI,KAAC,qBAAD,IAHJ,GALJ,cAWI,aAAK,SAAS,CAAC,iBAAf,CAAiC,OAAO,CAAE,yBAAMA,CAAAA,YAAY,CAAC,IAAD,CAAlB,EAA1C,wBAEF,KAAC,QAAD,IAFE,cAGF,4BAHE,GAXJ,GAPJ,cAwBI,MAAC,KAAD,EACF,MAAM,CAAED,SADN,CAEF,cAAc,CAAE,gCAAMC,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAFd,CAGF,yBAAyB,CAAE,KAHzB,CAIF,KAAK,CAAE,CACLkB,OAAO,CAAE,CACPC,KAAK,CAAE,GADA,CAEPC,MAAM,CAAE,GAFD,CAGPC,eAAe,CAAE,iBAHV,CAIPC,MAAM,CAAE,MAJD,CAKPC,GAAG,CAAE,KALE,CAMPC,IAAI,CAAE,KANC,CAOPC,SAAS,CAAE,QAPJ,CAQPC,UAAU,CAAE,QARL,CADJ,CAJL,wBAiBF,aAAK,SAAS,CAAC,cAAf,wBACE,oCADF,cAEE,kCAFF,GAjBE,cAqBF,aAAK,SAAS,CAAC,aAAf,wBACE,KAAC,MAAD,EACE,SAAS,CAAC,QADZ,CAEE,GAAG,CACDV,IAAI,CAACC,KAHT,EADF,cAOE,qBAAID,IAAI,CAACW,WAAL,CAAmBX,IAAI,CAACW,WAAxB,CAAsCX,IAAI,CAACY,KAA/C,YAPF,cAQE,aAAK,SAAS,CAAC,cAAf,wBACE,KAAC,qBAAD,IADF,cAEE,6BAFF,cAGE,KAAC,UAAD,IAHF,GARF,GArBE,cAmCF,aAAK,SAAS,CAAC,cAAf,wBACE,KAAC,KAAD,EACA,QAAQ,KADR,CAEA,KAAK,CAAI3B,KAFT,CAGA,QAAQ,CAAI,kBAACK,CAAD,QAAOJ,CAAAA,QAAQ,CAACI,CAAC,CAACuB,MAAF,CAASC,KAAV,CAAf,EAHZ,CAIE,IAAI,CAAC,MAJP,CAKE,WAAW,CAAC,sDALd,EADF,cAQE,aAAK,SAAS,CAAC,kBAAf,wBACE,KAAC,IAAD,IADF,cAEE,cACA,KAAK,CAAI3B,QADT,CAEA,QAAQ,CAAI,kBAACG,CAAD,QAAOF,CAAAA,WAAW,CAACE,CAAC,CAACuB,MAAF,CAASC,KAAV,CAAlB,EAFZ,CAGE,IAAI,CAAC,MAHP,CAIE,WAAW,CAAC,4CAJd,EAFF,GARF,GAnCE,cAqDF,aAAK,SAAS,CAAC,gBAAf,wBACE,eAAQ,SAAS,CAAC,QAAlB,CAA2B,OAAO,CAAE,yBAAM9B,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAApC,oBADF,cAIE,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAIK,cAAjC,CAAiD,SAAS,CAAC,KAA3D,0BAJF,GArDE,GAxBJ,GADJ,CA2FH,CAED,cAAeP,CAAAA,QAAf","sourcesContent":["import { Avatar } from '@material-ui/core'\r\nimport React, {useState} from 'react'\r\nimport '../css/QuoraBox.css'\r\nimport { useSelector } from 'react-redux'\r\nimport {selectUser} from '../features/userSlice'\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport PublicOutlinedIcon from '@material-ui/icons/PublicOutlined';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Modal from 'react-modal'\r\nimport { ExpandMore, Link } from '@material-ui/icons/'\r\nimport firebase from 'firebase'\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined'\r\nimport { Input } from '@material-ui/core'\r\n\r\nimport db, { auth } from \"../firebase\"\r\n\r\n\r\nfunction QuoraBox() {\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [input, setInput] = useState(\"\")\r\n    const[inputUrl, setInputUrl] = useState(\"\")\r\n\r\n    const handleQuestion = (e) => {\r\n        e.preventDefault()\r\n\r\n        setOpenModal(false)\r\n\r\n        db.collection('questions').add({\r\n            question: input,\r\n            imageUrl: inputUrl,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user\r\n        })\r\n\r\n        setInput(\"\");\r\n        setInputUrl(\"\");\r\n    }\r\n\r\n    const user= useSelector(selectUser)\r\n    return (\r\n        <div className=\"quoraBox\">\r\n            <div className=\"quoraBox_info\">\r\n                <Avatar \r\n                src={user.photo}\r\n                />\r\n                <h5 onClick={() => setOpenModal(true)}>What is your Question or Link?</h5>\r\n            </div>\r\n            <div className=\"quoraBox_quora\">\r\n                <div className=\"quoraBox_icon\">\r\n                    <ImageOutlinedIcon />\r\n                    <h5>Add image</h5>\r\n                </div>\r\n                <div className=\"quoraBox_icon\">\r\n                    <PublicOutlinedIcon />\r\n                    <h5>Public</h5>\r\n                    <KeyboardArrowDownIcon />\r\n                </div>\r\n\r\n                <div className=\"quoraBox_button\" onClick={() => setOpenModal(true)}>\r\n                \r\n              <SendIcon/>\r\n              <h5>Post</h5>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n          isOpen={openModal}\r\n          onRequestClose={() => setOpenModal(false)}\r\n          shouldCloseOnOverlayClick={false}\r\n          style={{\r\n            overlay: {\r\n              width: 700,\r\n              height: 600,\r\n              backgroundColor: \"rgba(0,0,0,0.8)\",\r\n              zIndex: \"1000\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              marginTop: \"-300px\",\r\n              marginLeft: \"-350px\",\r\n            },\r\n          }}\r\n        >\r\n          <div className=\"modal__title\">\r\n            <h5>Add Question</h5>\r\n            <h5>Share Link</h5>\r\n          </div>\r\n          <div className=\"modal__info\">\r\n            <Avatar\r\n              className=\"avatar\"\r\n              src={\r\n                user.photo\r\n              }\r\n            />\r\n            <p>{user.disPlayName ? user.disPlayName : user.email} asked</p>\r\n            <div className=\"modal__scope\">\r\n              <PeopleAltOutlinedIcon />\r\n              <p>Public</p>\r\n              <ExpandMore />\r\n            </div>\r\n          </div>\r\n          <div className=\"modal__Field\">\r\n            <Input\r\n            required\r\n            value = {input}\r\n            onChange = {(e) => setInput(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Start your question with 'What', 'How', 'Why', etc. \"\r\n            />\r\n            <div className=\"modal__fieldLink\">\r\n              <Link />\r\n              <input\r\n              value = {inputUrl}\r\n              onChange = {(e) => setInputUrl(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Optional: inclue a link that gives context\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal__buttons\">\r\n            <button className=\"cancle\" onClick={() => setOpenModal(false)}>\r\n              Cancel\r\n            </button>\r\n            <button type=\"sumbit\" onClick = {handleQuestion} className=\"add\">\r\n              Add Question\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default QuoraBox \r\n"]},"metadata":{},"sourceType":"module"}