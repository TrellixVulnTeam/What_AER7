{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Desktop\\\\fukran\\\\quora-clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Login from \"./component/auth/Login\";\nimport Quora from \"./component/Quora\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [color, setColor] = useState(\"#ffffff\");\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.onAuthStateChanged(async authUser => {\n      if (authUser) {\n        dispatch(login({\n          uid: authUser.uid,\n          email: authUser.email,\n          displayName: authUser.displayName,\n          photo: authUser.photoURL\n        }));\n        console.log(authUser);\n        await setLoading(true);\n      } else {\n        dispatch(logout());\n      }\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: color,\n      loading: loading,\n      css: override,\n      size: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", user ? /*#__PURE__*/_jsxDEV(Quora, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 103\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 116\n      }, this), \" \"]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"uy9a3gYXt1Y9HVpwS6gfAZ46b90=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/priya/Desktop/fukran/quora-clone/src/App.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Login","Quora","login","logout","selectUser","auth","css","ClipLoader","override","App","loading","setLoading","color","setColor","user","dispatch","onAuthStateChanged","authUser","uid","email","displayName","photo","photoURL","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,sBAA1C;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA,CAJA;;AAOA,SAASG,GAAT,GAAe;AAAA;;AAGf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,SAAD,CAAlC;AAEE,QAAMiB,IAAI,GAAGf,WAAW,CAACK,UAAD,CAAxB;AACA,QAAMW,QAAQ,GAAGjB,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AAEdS,IAAAA,IAAI,CAACW,kBAAL,CAAwB,MAAMC,QAAN,IAAmB;AACzC,UAAIA,QAAJ,EAAc;AACZF,QAAAA,QAAQ,CACNb,KAAK,CAAC;AACJgB,UAAAA,GAAG,EAAED,QAAQ,CAACC,GADV;AAEJC,UAAAA,KAAK,EAAEF,QAAQ,CAACE,KAFZ;AAGJC,UAAAA,WAAW,EAAEH,QAAQ,CAACG,WAHlB;AAIJC,UAAAA,KAAK,EAAEJ,QAAQ,CAACK;AAJZ,SAAD,CADC,CAAR;AAQAC,QAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,cAAMN,UAAU,CAAC,IAAD,CAAhB;AACD,OAXD,MAWO;AACLI,QAAAA,QAAQ,CAACZ,MAAM,EAAP,CAAR;AACD;AAEF,KAhBD;AAiBD,GAnBQ,EAmBN,CAACY,QAAD,CAnBM,CAAT;AAoBA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACJL,OAAO,gBAAG,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEE,KAAnB;AAA0B,MAAA,OAAO,EAAEF,OAAnC;AAA4C,MAAA,GAAG,EAAEF,QAAjD;AAA2D,MAAA,IAAI,EAAE;AAAjE;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8E;AAAA,sBAAIM,IAAI,gBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAJ,gBAAiB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAzB;AAAA;AADjF;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD;;GA/BQL,G;UAMMV,W,EACID,W;;;KAPVW,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Login from \"./component/auth/Login\";\nimport Quora from \"./component/Quora\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\nfunction App() {\n\n  \nconst [loading, setLoading] = useState(false);\nconst [color, setColor] = useState(\"#ffffff\");\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    \n    auth.onAuthStateChanged(async(authUser) => {\n      if (authUser) {\n        dispatch(\n          login({\n            uid: authUser.uid,\n            email: authUser.email,\n            displayName: authUser.displayName,\n            photo: authUser.photoURL,\n          })\n        );\n        console.log(authUser);\n        await setLoading(true);\n      } else {\n        dispatch(logout());\n      }\n      \n    });\n  }, [dispatch]);\n  return <div className=\"App\">\n    {loading ? <ClipLoader color={color} loading={loading} css={override} size={150} /> : <> {user ?  <Quora /> :  <Login />} </>}\n    </div>;\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}