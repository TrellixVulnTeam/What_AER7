{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Desktop\\\\fukran\\\\quora-clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Login from \"./component/auth/Login\";\nimport Quora from \"./component/Quora\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nfunction App() {\n  _s();\n\n  let [loading, setLoading] = useState(false);\n  let [color, setColor] = useState(\"#ffffff\");\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        dispatch(login({\n          uid: authUser.uid,\n          email: authUser.email,\n          displayName: authUser.displayName,\n          photo: authUser.photoURL\n        }));\n        console.log(authUser);\n        setLoading(true);\n      } else {\n        dispatch(logout());\n      }\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: user ? /*#__PURE__*/_jsxDEV(Quora, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"uy9a3gYXt1Y9HVpwS6gfAZ46b90=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/priya/Desktop/fukran/quora-clone/src/App.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Login","Quora","login","logout","selectUser","auth","css","ClipLoader","override","App","loading","setLoading","color","setColor","user","dispatch","onAuthStateChanged","authUser","uid","email","displayName","photo","photoURL","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,sBAA1C;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA,CAJA;;AAOA,SAASG,GAAT,GAAe;AAAA;;AAIf,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAApC;AACA,MAAI,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,SAAD,CAAhC;AAEE,QAAMiB,IAAI,GAAGf,WAAW,CAACK,UAAD,CAAxB;AACA,QAAMW,QAAQ,GAAGjB,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AAEdS,IAAAA,IAAI,CAACW,kBAAL,CAAyBC,QAAD,IAAc;AACpC,UAAIA,QAAJ,EAAc;AACZF,QAAAA,QAAQ,CACNb,KAAK,CAAC;AACJgB,UAAAA,GAAG,EAAED,QAAQ,CAACC,GADV;AAEJC,UAAAA,KAAK,EAAEF,QAAQ,CAACE,KAFZ;AAGJC,UAAAA,WAAW,EAAEH,QAAQ,CAACG,WAHlB;AAIJC,UAAAA,KAAK,EAAEJ,QAAQ,CAACK;AAJZ,SAAD,CADC,CAAR;AAQAC,QAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAN,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAXD,MAWO;AACLI,QAAAA,QAAQ,CAACZ,MAAM,EAAP,CAAR;AAED;AAEF,KAjBD;AAkBD,GApBQ,EAoBN,CAACY,QAAD,CApBM,CAAT;AAqBA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACHD,IAAI,gBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAAiB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADlB;AAAA;AAAA;AAAA;AAAA,UAAP;AAID;;GAlCQL,G;UAOMV,W,EACID,W;;;KARVW,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Login from \"./component/auth/Login\";\nimport Quora from \"./component/Quora\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\nfunction App() {\n\n  \n\nlet [loading, setLoading] = useState(false);\nlet [color, setColor] = useState(\"#ffffff\");\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    \n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(\n          login({\n            uid: authUser.uid,\n            email: authUser.email,\n            displayName: authUser.displayName,\n            photo: authUser.photoURL,\n          })\n        );\n        console.log(authUser);\n        setLoading(true);\n      } else {\n        dispatch(logout());\n        \n      }\n      \n    });\n  }, [dispatch]);\n  return <div className=\"App\">\n     {user ?  <Quora /> :  <Login />  } \n    {/* <ClipLoader color={color} loading={loading} css={override} size={150} /> */}\n    </div>;\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}