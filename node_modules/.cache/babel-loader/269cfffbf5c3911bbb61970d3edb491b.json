{"ast":null,"code":"import _slicedToArray from\"C:/Users/priya/Desktop/fukran/quora-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:/Users/priya/Desktop/fukran/quora-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import\"./App.css\";import Login from\"./component/auth/Login\";import Quora from\"./component/Quora\";import{login,logout,selectUser}from\"./features/userSlice\";import{auth}from\"./firebase\";import{css}from\"@emotion/react\";//import ClipLoader from \"react-spinners/ClipLoader\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";function App(){var override=css(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: block;\\n  margin: 0 auto;\\n  border-color: red;\\n\"])));//let [color, setColor] = useState(\"#ffffff\");\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var user=useSelector(selectUser);var dispatch=useDispatch();useEffect(function(){auth.onAuthStateChanged(function(authUser){if(authUser){dispatch(login({uid:authUser.uid,email:authUser.email,displayName:authUser.displayName,photo:authUser.photoURL}));console.log(authUser);setLoading(true);}else{dispatch(logout());}});},[dispatch]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:user?/*#__PURE__*/_jsx(Quora,{}):/*#__PURE__*/_jsx(Login,{})});}export default App;","map":{"version":3,"sources":["C:/Users/priya/Desktop/fukran/quora-clone/src/App.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Login","Quora","login","logout","selectUser","auth","css","App","override","loading","setLoading","user","dispatch","onAuthStateChanged","authUser","uid","email","displayName","photo","photoURL","console","log"],"mappings":"oWAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,UAAxB,KAA0C,sBAA1C,CACA,OAASC,IAAT,KAAqB,YAArB,CACA,OAASC,GAAT,KAAoB,gBAApB,CACA;2CAGA,QAASC,CAAAA,GAAT,EAAe,CAEb,GAAMC,CAAAA,QAAQ,CAAGF,GAAH,+HAAd,CAMF;AAEA,cAA8BT,QAAQ,CAAC,KAAD,CAAtC,wCAAOY,OAAP,eAAgBC,UAAhB,eAEE,GAAMC,CAAAA,IAAI,CAAGZ,WAAW,CAACK,UAAD,CAAxB,CACA,GAAMQ,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CACAF,SAAS,CAAC,UAAM,CAEdS,IAAI,CAACQ,kBAAL,CAAwB,SAACC,QAAD,CAAc,CACpC,GAAIA,QAAJ,CAAc,CACZF,QAAQ,CACNV,KAAK,CAAC,CACJa,GAAG,CAAED,QAAQ,CAACC,GADV,CAEJC,KAAK,CAAEF,QAAQ,CAACE,KAFZ,CAGJC,WAAW,CAAEH,QAAQ,CAACG,WAHlB,CAIJC,KAAK,CAAEJ,QAAQ,CAACK,QAJZ,CAAD,CADC,CAAR,CAQAC,OAAO,CAACC,GAAR,CAAYP,QAAZ,EACAJ,UAAU,CAAC,IAAD,CAAV,CACD,CAXD,IAWO,CACLE,QAAQ,CAACT,MAAM,EAAP,CAAR,CAED,CAEF,CAjBD,EAkBD,CApBQ,CAoBN,CAACS,QAAD,CApBM,CAAT,CAqBA,mBAAO,YAAK,SAAS,CAAC,KAAf,UACHD,IAAI,cAAI,KAAC,KAAD,IAAJ,cAAiB,KAAC,KAAD,IADlB,EAAP,CAID,CAED,cAAeJ,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Login from \"./component/auth/Login\";\nimport Quora from \"./component/Quora\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport { auth } from \"./firebase\";\nimport { css } from \"@emotion/react\";\n//import ClipLoader from \"react-spinners/ClipLoader\";\n\n\nfunction App() {\n\n  const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n//let [color, setColor] = useState(\"#ffffff\");\n\nconst [loading, setLoading] = useState(false);\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    \n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(\n          login({\n            uid: authUser.uid,\n            email: authUser.email,\n            displayName: authUser.displayName,\n            photo: authUser.photoURL,\n          })\n        );\n        console.log(authUser);\n        setLoading(true);\n      } else {\n        dispatch(logout());\n        \n      }\n      \n    });\n  }, [dispatch]);\n  return <div className=\"App\">\n     {user ?  <Quora /> :  <Login />  } \n    {/* <ClipLoader color={color} loading={loading} css={override} size={150} /> */}\n    </div>;\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}